#!/bin/bash

# Script to automatically retrieve API configuration and set up frontend environment
# This script extracts API Gateway URL and API key from CDK deployment outputs
# and creates/updates the frontend/.env file

set -e

# Configuration
REGION="ap-northeast-1"
PROFILE="${AWS_PROFILE:-primary}"
STACK_NAME="UrlRedirectionTrackingStack"
ENV_FILE="frontend/.env"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Setting up frontend configuration for stack: $STACK_NAME${NC}"

# Create frontend directory if it doesn't exist
mkdir -p frontend

# Get API Gateway URL from CloudFormation outputs
echo "Retrieving API Gateway URL..."
API_GATEWAY_URL=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayUrl`].OutputValue' \
  --output text \
  --profile $PROFILE \
  --region $REGION)

if [ -z "$API_GATEWAY_URL" ] || [ "$API_GATEWAY_URL" = "None" ]; then
  echo -e "${RED}Error: Could not find API Gateway URL in stack outputs${NC}"
  echo "Make sure the stack is deployed and contains the ApiGatewayUrl output"
  exit 1
fi

# Remove trailing slash if present
API_GATEWAY_URL=$(echo "$API_GATEWAY_URL" | sed 's/\/$//') 

echo -e "${GREEN}API Gateway URL: $API_GATEWAY_URL${NC}"

# Get the API Key ID from CloudFormation outputs
echo "Retrieving API Key ID..."
API_KEY_ID=$(aws cloudformation describe-stacks \
  --stack-name "$STACK_NAME" \
  --query 'Stacks[0].Outputs[?OutputKey==`ApiKeyId`].OutputValue' \
  --output text \
  --profile $PROFILE \
  --region $REGION)

if [ -z "$API_KEY_ID" ] || [ "$API_KEY_ID" = "None" ]; then
  echo -e "${RED}Error: Could not find API Key ID in stack outputs${NC}"
  echo "Make sure the stack is deployed and contains the ApiKeyId output"
  exit 1
fi

echo -e "${GREEN}API Key ID: $API_KEY_ID${NC}"

# Get the actual API key value
echo "Retrieving API key value..."
API_KEY_VALUE=$(aws apigateway get-api-key \
  --api-key "$API_KEY_ID" \
  --include-value \
  --query 'value' \
  --output text \
  --profile $PROFILE \
  --region $REGION)

if [ -z "$API_KEY_VALUE" ] || [ "$API_KEY_VALUE" = "None" ]; then
  echo -e "${RED}Error: Could not retrieve API key value${NC}"
  exit 1
fi

echo -e "${GREEN}API Key retrieved successfully${NC}"

# Create/update the .env file
echo "Creating frontend environment configuration..."
cat > "$ENV_FILE" << EOF
# Frontend Environment Configuration
# Auto-generated by scripts/setup-frontend-config.sh
# Generated on: $(date)

# API Configuration
VITE_API_BASE_URL=$API_GATEWAY_URL

# API Key (for CloudFront custom header setup - NOT used in frontend code)
# This is stored here for deployment pipeline reference only
API_KEY_VALUE=$API_KEY_VALUE
API_KEY_ID=$API_KEY_ID

# Development Configuration
VITE_APP_NAME=URL Redirection Analytics Dashboard
VITE_APP_VERSION=1.0.0
VITE_NODE_ENV=development
EOF

echo -e "${GREEN}Frontend configuration created successfully!${NC}"
echo ""
echo -e "${YELLOW}=== Configuration Summary ===${NC}"
echo "Environment file: $ENV_FILE"
echo "API Base URL: $API_GATEWAY_URL"
echo "API Key ID: $API_KEY_ID"
echo ""
echo -e "${BLUE}Note: The API key is stored in the .env file for deployment pipeline reference.${NC}"
echo -e "${BLUE}It will be injected via CloudFront custom headers and NOT exposed to frontend code.${NC}"
echo ""
echo -e "${GREEN}Frontend environment setup complete!${NC}"